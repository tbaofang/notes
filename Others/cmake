#指定要求最低版本
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

#项目名称
PROJECT(QR)

#指定编译器
SET(CMAKE_CXX_FLAGS "-std=c++11 -O3")

#打印变量
MESSAGE(STATUS "This is binary dir:" ${PROJECT_BINARY_DIR})
MESSAGE(STATUS "This is source dir:" ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS "This is module dir:" ${CMAKE_MODULE_PATH})

#指定生成二进制文件到目标文件夹
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})

#收集目录中的文件名并赋值给变量
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src SOURCE_FILES)

#包含指定目录下的指定文件夹
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

#指定库文件路径。注意：由于历史原因，相对路径会原样传递给链接器。尽量使用FIND_LIBRARY而避免使用这个
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib)

#生成可执行文件
ADD_EXECUTABLE(qr qr.cpp)

#指定库文件连接到执行文件
TARGET_LINK_LIBRARIES(LidarShanC mrpt-base mrpt-obs mrpt-hwdrivers mrpt-maps mrpt-slam mrpt-opengl mrpt-gui)

#添加子目录
ADD_SUBDIRECTORY(src)

#查找链接库，添加库的头文件，链接源文件与库文件
FIND_PACKAGE(BZip2)
IF (BZIP2_FOUND)
	INCLUDE_DIRECTORIES(${BZIP_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(helloworld ${BZIP2_LIBRARIES})
ENDIF(BZIP2_FOUND)
